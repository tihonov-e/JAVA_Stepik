/*
2.4 Управляющие конструкции: условные операторы и циклы
        10 из 10 шагов пройдено
        8 из 8 баллов  получено
        Вам дан список ролей и сценарий пьесы в виде массива строчек.

        Каждая строчка сценария пьесы дана в следующем виде:
        Роль: текст

        Текст может содержать любые символы.

        Напишите метод, который будет группировать строчки по ролям, пронумеровывать их и возвращать результат в виде
        готового текста (см. пример). Каждая группа распечатывается в следующем виде:

        Роль:
        i) текст
        j) текст2
        ...
        ==перевод строки==

        i и j -- номера строк в сценарии. Индексация строчек начинается с единицы, выводить группы следует в
        соответствии с порядком ролей. Переводы строк между группами обязательны, переводы строк в конце текста
        не учитываются.

        Заметим, что вам предстоит обработка огромной пьесы в 50 000 строк для 10 ролей – соответственно,
        неправильная сборка результирующей строчки может выйти за ограничение по времени.

        Обратите внимание еще на несколько нюансов:

        имя персонажа может встречаться в строке более одного раза, в том числе с двоеточием;
        название одной роли может быть префиксом названия другой роли (например, "Лука" и "Лука Лукич");
        роль, у которой нет реплик, тоже должна присутствовать в выходном файле;
        в качестве перевода строки надо использовать символ '\n' (перевод строки в стиле UNIX);
        будьте внимательны, не добавляйте лишних пробелов в конце строк.
        Sample Input:

        roles:
        Городничий
        Аммос Федорович
        Артемий Филиппович
        Лука Лукич
        textLines:
        Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.
        Аммос Федорович: Как ревизор?
        Артемий Филиппович: Как ревизор?
        Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.
        Аммос Федорович: Вот те на!
        Артемий Филиппович: Вот не было заботы, так подай!
        Лука Лукич: Господи боже! еще и с секретным предписаньем!
        Sample Output:

        Городничий:
        1) Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.
        4) Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.

        Аммос Федорович:
        2) Как ревизор?
        5) Вот те на!

        Артемий Филиппович:
        3) Как ревизор?
        6) Вот не было заботы, так подай!

        Лука Лукич:
        7) Господи боже! еще и с секретным предписаньем!
*/




package com.company;

public class Main {

    public static void main(String[] args) {
        String [] roles = {
                "Городничий","Аммос Федорович",
                "Артемий Филиппович",
                "Лука Лукич"};
        String [] textLines = {
                "Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.",
                "Аммос Федорович: Как ревизор?",
                "Артемий Филиппович: Как ревизор?",
                "Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.",
                "Аммос Федорович: Вот те на!",
                "Артемий Филиппович: Вот не было заботы, так подай!",
                "Лука Лукич: Господи боже! еще и с секретным предписаньем!"};

        System.out.println (printTextPerRole(roles, textLines));

    }



/*----------------------------------------------------------------------------
Решение
1) Взять из списка ролей 1ю роль, сформировать строку вида Роль + : + \n
result.append(roles[i]+ ":" + "\n");
2) Найти строку начинающуюся (startWith) с Роль:,
    вырезать "Роль:", что осталось пронумеровать и прилепить к результирующей строке
[i]+")" + textString + \n
3) Искать следующее вхождение роли и повторить п.2
            4) Если такой роли больше нет, перейти к следующей и повторить п.2 и п.3
            5) Если больше ролей нет вообще - вернуть то, что получилось
----------------------------------------------------------------------------
*/

    public static String printTextPerRole(String[] roles, String[] textLines) {
        //инициализация объекта класса StringBuilder
        //для дальнейшей обработки
        StringBuilder sbResult = new StringBuilder();

        for (int i = 0; i < roles.length; i++) { //цикл по массиву ролей
            //формируем первую строку с именем роли + перенос
            sbResult.append(roles[i] + ":" + "\n");

            //вложенный цикл по массиву текстов
            for (int j = 0; j < textLines.length; j++) {
                //ищем строку, начинающуюся с текущей роли: "Роль" + ":"
                if (textLines[j].startsWith(roles[i] + ":")) {
                    //вырезаем "Роль" + ":" в начале строки
                    String textString = textLines[j].replaceFirst(roles[i] + ":","");
                    //и добавляем к строке sbResult[i] результирующего массива
                    sbResult.append((j+1) + ")" + textString + "\n");
                }
                //если роли больши нет, добавляем перенос строки
                if (j == textLines.length - 1) sbResult.append("\n");
            }

        }

        return sbResult.toString();
    }


}
